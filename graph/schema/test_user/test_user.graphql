type TestUser implements Node {
  id: ID!
  name: String!
  age: Int!
  testTodos: [TestTodo!]!
  createdAt: String!
  updatedAt: String!
}
type TestUserConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [TestUserEdge]
}
type TestUserEdge {
  node: TestUser
  cursor: Cursor!
}

input CreateTestUserInput {
  name: String!
  age: Int!
}
input UpdateTestUserInput {
  id: ID!
  name: String
  age: Int
}

extend type Query {
  testUser(id: ID, age: Int): TestUser
  testUsers(after: Cursor, first: Int, before: Cursor, last: Int): TestUserConnection
}

extend type Mutation {
  createTestUser(input: CreateTestUserInput!): TestUser!
  updateTestUser(input: UpdateTestUserInput!): TestUser!
}
