type ProjectTaskSection implements Node {
  id: ID!
  projectId: ID!
  project: Project!
  name: String!
  projectTasks: [ProjectTask!]!
  createdAt: String!
  updatedAt: String!
}
type ProjectTaskSectionConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [ProjectTaskSectionEdge]
}
type ProjectTaskSectionEdge {
  node: ProjectTaskSection
  cursor: Cursor!
}

input CreateProjectTaskSectionInput {
  projectId: ID!
  requestId: String!
  workspaceId: ID!
}

input UpdateProjectTaskSectionInput {
  id: ID!
  projectId: ID
  name: String
  requestId: String!
  workspaceId: ID!
}

extend type Subscription {
  projectTaskSectionUpdated(workspaceId: ID!, requestId: String!): ProjectTaskSection!
  projectTaskSectionCreated(workspaceId: ID!, requestId: String!): ProjectTaskSection!
}

extend type Query {
  projectTaskSection(where: ProjectTaskSectionWhereInput): ProjectTaskSection
  projectTaskSections(after: Cursor, first: Int, before: Cursor, last: Int, where: ProjectTaskSectionWhereInput): ProjectTaskSectionConnection
}

extend type Mutation {
  createProjectTaskSection(input: CreateProjectTaskSectionInput!): ProjectTaskSection!
  updateProjectTaskSection(input: UpdateProjectTaskSectionInput!): ProjectTaskSection!
}
