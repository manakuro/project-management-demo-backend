{{ define "ulid" }}

    {{ $pkg := base $.Config.Package }}
    {{ template "header" $ }}

    // prefixMap maps ULID prefixes to table names.
    var prefixMap = map[ulid.ID]string{
    {{- range $node := $.Nodes }}
        {{- if $annotation := $node.Annotations.ULID }}
            "{{ $annotation.Prefix }}": {{ $node.Package }}.Table,
        {{- end }}
    {{- end }}
    }

    // IDToType maps a ulid.ID to the underlying table.
    func IDToType(ctx context.Context, id ulid.ID) (string, error) {
    if len(id) < 2 {
    return "", fmt.Errorf("IDToType: id too short")
    }
    prefix := id[:2]
    typ := prefixMap[prefix]
    if typ == "" {
    return "", fmt.Errorf("IDToType: could not map prefix '%s' to a type", prefix)
    }
    return typ, nil
    }

{{ end }}
