// Code generated by entc, DO NOT EDIT.

package ent

import (
	"project-management-demo-backend/ent/color"
	"project-management-demo-backend/ent/favoriteproject"
	"project-management-demo-backend/ent/favoriteworkspace"
	"project-management-demo-backend/ent/icon"
	"project-management-demo-backend/ent/project"
	"project-management-demo-backend/ent/projectbasecolor"
	"project-management-demo-backend/ent/projecticon"
	"project-management-demo-backend/ent/projectlightcolor"
	"project-management-demo-backend/ent/projecttaskcolumn"
	"project-management-demo-backend/ent/projecttaskliststatus"
	"project-management-demo-backend/ent/projecttasksection"
	"project-management-demo-backend/ent/projectteammate"
	"project-management-demo-backend/ent/schema"
	"project-management-demo-backend/ent/schema/ulid"
	"project-management-demo-backend/ent/taskcolumn"
	"project-management-demo-backend/ent/tasklistcompletedstatus"
	"project-management-demo-backend/ent/tasklistsortstatus"
	"project-management-demo-backend/ent/taskpriority"
	"project-management-demo-backend/ent/tasksection"
	"project-management-demo-backend/ent/teammate"
	"project-management-demo-backend/ent/teammatetaskcolumn"
	"project-management-demo-backend/ent/teammatetaskliststatus"
	"project-management-demo-backend/ent/teammatetasksection"
	"project-management-demo-backend/ent/teammatetasktabstatus"
	"project-management-demo-backend/ent/testtodo"
	"project-management-demo-backend/ent/testuser"
	"project-management-demo-backend/ent/workspace"
	"project-management-demo-backend/ent/workspaceteammate"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	colorMixin := schema.Color{}.Mixin()
	colorMixinFields0 := colorMixin[0].Fields()
	_ = colorMixinFields0
	colorMixinFields1 := colorMixin[1].Fields()
	_ = colorMixinFields1
	colorMixinFields2 := colorMixin[2].Fields()
	_ = colorMixinFields2
	colorFields := schema.Color{}.Fields()
	_ = colorFields
	// colorDescName is the schema descriptor for name field.
	colorDescName := colorMixinFields1[0].Descriptor()
	// color.NameValidator is a validator for the "name" field. It is called by the builders before save.
	color.NameValidator = func() func(string) error {
		validators := colorDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// colorDescColor is the schema descriptor for color field.
	colorDescColor := colorMixinFields1[1].Descriptor()
	// color.ColorValidator is a validator for the "color" field. It is called by the builders before save.
	color.ColorValidator = func() func(string) error {
		validators := colorDescColor.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(color string) error {
			for _, fn := range fns {
				if err := fn(color); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// colorDescHex is the schema descriptor for hex field.
	colorDescHex := colorMixinFields1[2].Descriptor()
	// color.HexValidator is a validator for the "hex" field. It is called by the builders before save.
	color.HexValidator = func() func(string) error {
		validators := colorDescHex.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(hex string) error {
			for _, fn := range fns {
				if err := fn(hex); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// colorDescCreatedAt is the schema descriptor for created_at field.
	colorDescCreatedAt := colorMixinFields2[0].Descriptor()
	// color.DefaultCreatedAt holds the default value on creation for the created_at field.
	color.DefaultCreatedAt = colorDescCreatedAt.Default.(func() time.Time)
	// colorDescUpdatedAt is the schema descriptor for updated_at field.
	colorDescUpdatedAt := colorMixinFields2[1].Descriptor()
	// color.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	color.DefaultUpdatedAt = colorDescUpdatedAt.Default.(func() time.Time)
	// colorDescID is the schema descriptor for id field.
	colorDescID := colorMixinFields0[0].Descriptor()
	// color.DefaultID holds the default value on creation for the id field.
	color.DefaultID = colorDescID.Default.(func() ulid.ID)
	favoriteprojectMixin := schema.FavoriteProject{}.Mixin()
	favoriteprojectMixinFields0 := favoriteprojectMixin[0].Fields()
	_ = favoriteprojectMixinFields0
	favoriteprojectMixinFields2 := favoriteprojectMixin[2].Fields()
	_ = favoriteprojectMixinFields2
	favoriteprojectFields := schema.FavoriteProject{}.Fields()
	_ = favoriteprojectFields
	// favoriteprojectDescCreatedAt is the schema descriptor for created_at field.
	favoriteprojectDescCreatedAt := favoriteprojectMixinFields2[0].Descriptor()
	// favoriteproject.DefaultCreatedAt holds the default value on creation for the created_at field.
	favoriteproject.DefaultCreatedAt = favoriteprojectDescCreatedAt.Default.(func() time.Time)
	// favoriteprojectDescUpdatedAt is the schema descriptor for updated_at field.
	favoriteprojectDescUpdatedAt := favoriteprojectMixinFields2[1].Descriptor()
	// favoriteproject.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	favoriteproject.DefaultUpdatedAt = favoriteprojectDescUpdatedAt.Default.(func() time.Time)
	// favoriteprojectDescID is the schema descriptor for id field.
	favoriteprojectDescID := favoriteprojectMixinFields0[0].Descriptor()
	// favoriteproject.DefaultID holds the default value on creation for the id field.
	favoriteproject.DefaultID = favoriteprojectDescID.Default.(func() ulid.ID)
	favoriteworkspaceMixin := schema.FavoriteWorkspace{}.Mixin()
	favoriteworkspaceMixinFields0 := favoriteworkspaceMixin[0].Fields()
	_ = favoriteworkspaceMixinFields0
	favoriteworkspaceMixinFields2 := favoriteworkspaceMixin[2].Fields()
	_ = favoriteworkspaceMixinFields2
	favoriteworkspaceFields := schema.FavoriteWorkspace{}.Fields()
	_ = favoriteworkspaceFields
	// favoriteworkspaceDescCreatedAt is the schema descriptor for created_at field.
	favoriteworkspaceDescCreatedAt := favoriteworkspaceMixinFields2[0].Descriptor()
	// favoriteworkspace.DefaultCreatedAt holds the default value on creation for the created_at field.
	favoriteworkspace.DefaultCreatedAt = favoriteworkspaceDescCreatedAt.Default.(func() time.Time)
	// favoriteworkspaceDescUpdatedAt is the schema descriptor for updated_at field.
	favoriteworkspaceDescUpdatedAt := favoriteworkspaceMixinFields2[1].Descriptor()
	// favoriteworkspace.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	favoriteworkspace.DefaultUpdatedAt = favoriteworkspaceDescUpdatedAt.Default.(func() time.Time)
	// favoriteworkspaceDescID is the schema descriptor for id field.
	favoriteworkspaceDescID := favoriteworkspaceMixinFields0[0].Descriptor()
	// favoriteworkspace.DefaultID holds the default value on creation for the id field.
	favoriteworkspace.DefaultID = favoriteworkspaceDescID.Default.(func() ulid.ID)
	iconMixin := schema.Icon{}.Mixin()
	iconMixinFields0 := iconMixin[0].Fields()
	_ = iconMixinFields0
	iconMixinFields1 := iconMixin[1].Fields()
	_ = iconMixinFields1
	iconMixinFields2 := iconMixin[2].Fields()
	_ = iconMixinFields2
	iconFields := schema.Icon{}.Fields()
	_ = iconFields
	// iconDescName is the schema descriptor for name field.
	iconDescName := iconMixinFields1[0].Descriptor()
	// icon.NameValidator is a validator for the "name" field. It is called by the builders before save.
	icon.NameValidator = func() func(string) error {
		validators := iconDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// iconDescIcon is the schema descriptor for icon field.
	iconDescIcon := iconMixinFields1[1].Descriptor()
	// icon.IconValidator is a validator for the "icon" field. It is called by the builders before save.
	icon.IconValidator = func() func(string) error {
		validators := iconDescIcon.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(icon string) error {
			for _, fn := range fns {
				if err := fn(icon); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// iconDescCreatedAt is the schema descriptor for created_at field.
	iconDescCreatedAt := iconMixinFields2[0].Descriptor()
	// icon.DefaultCreatedAt holds the default value on creation for the created_at field.
	icon.DefaultCreatedAt = iconDescCreatedAt.Default.(func() time.Time)
	// iconDescUpdatedAt is the schema descriptor for updated_at field.
	iconDescUpdatedAt := iconMixinFields2[1].Descriptor()
	// icon.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	icon.DefaultUpdatedAt = iconDescUpdatedAt.Default.(func() time.Time)
	// iconDescID is the schema descriptor for id field.
	iconDescID := iconMixinFields0[0].Descriptor()
	// icon.DefaultID holds the default value on creation for the id field.
	icon.DefaultID = iconDescID.Default.(func() ulid.ID)
	projectMixin := schema.Project{}.Mixin()
	projectMixinFields0 := projectMixin[0].Fields()
	_ = projectMixinFields0
	projectMixinFields1 := projectMixin[1].Fields()
	_ = projectMixinFields1
	projectMixinFields2 := projectMixin[2].Fields()
	_ = projectMixinFields2
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescName is the schema descriptor for name field.
	projectDescName := projectMixinFields1[5].Descriptor()
	// project.NameValidator is a validator for the "name" field. It is called by the builders before save.
	project.NameValidator = func() func(string) error {
		validators := projectDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// projectDescDescriptionTitle is the schema descriptor for description_title field.
	projectDescDescriptionTitle := projectMixinFields1[7].Descriptor()
	// project.DescriptionTitleValidator is a validator for the "description_title" field. It is called by the builders before save.
	project.DescriptionTitleValidator = projectDescDescriptionTitle.Validators[0].(func(string) error)
	// projectDescDueDate is the schema descriptor for due_date field.
	projectDescDueDate := projectMixinFields1[8].Descriptor()
	// project.DefaultDueDate holds the default value on creation for the due_date field.
	project.DefaultDueDate = projectDescDueDate.Default.(func() time.Time)
	// projectDescCreatedAt is the schema descriptor for created_at field.
	projectDescCreatedAt := projectMixinFields2[0].Descriptor()
	// project.DefaultCreatedAt holds the default value on creation for the created_at field.
	project.DefaultCreatedAt = projectDescCreatedAt.Default.(func() time.Time)
	// projectDescUpdatedAt is the schema descriptor for updated_at field.
	projectDescUpdatedAt := projectMixinFields2[1].Descriptor()
	// project.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	project.DefaultUpdatedAt = projectDescUpdatedAt.Default.(func() time.Time)
	// projectDescID is the schema descriptor for id field.
	projectDescID := projectMixinFields0[0].Descriptor()
	// project.DefaultID holds the default value on creation for the id field.
	project.DefaultID = projectDescID.Default.(func() ulid.ID)
	projectbasecolorMixin := schema.ProjectBaseColor{}.Mixin()
	projectbasecolorMixinFields0 := projectbasecolorMixin[0].Fields()
	_ = projectbasecolorMixinFields0
	projectbasecolorMixinFields2 := projectbasecolorMixin[2].Fields()
	_ = projectbasecolorMixinFields2
	projectbasecolorFields := schema.ProjectBaseColor{}.Fields()
	_ = projectbasecolorFields
	// projectbasecolorDescCreatedAt is the schema descriptor for created_at field.
	projectbasecolorDescCreatedAt := projectbasecolorMixinFields2[0].Descriptor()
	// projectbasecolor.DefaultCreatedAt holds the default value on creation for the created_at field.
	projectbasecolor.DefaultCreatedAt = projectbasecolorDescCreatedAt.Default.(func() time.Time)
	// projectbasecolorDescUpdatedAt is the schema descriptor for updated_at field.
	projectbasecolorDescUpdatedAt := projectbasecolorMixinFields2[1].Descriptor()
	// projectbasecolor.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projectbasecolor.DefaultUpdatedAt = projectbasecolorDescUpdatedAt.Default.(func() time.Time)
	// projectbasecolorDescID is the schema descriptor for id field.
	projectbasecolorDescID := projectbasecolorMixinFields0[0].Descriptor()
	// projectbasecolor.DefaultID holds the default value on creation for the id field.
	projectbasecolor.DefaultID = projectbasecolorDescID.Default.(func() ulid.ID)
	projecticonMixin := schema.ProjectIcon{}.Mixin()
	projecticonMixinFields0 := projecticonMixin[0].Fields()
	_ = projecticonMixinFields0
	projecticonMixinFields2 := projecticonMixin[2].Fields()
	_ = projecticonMixinFields2
	projecticonFields := schema.ProjectIcon{}.Fields()
	_ = projecticonFields
	// projecticonDescCreatedAt is the schema descriptor for created_at field.
	projecticonDescCreatedAt := projecticonMixinFields2[0].Descriptor()
	// projecticon.DefaultCreatedAt holds the default value on creation for the created_at field.
	projecticon.DefaultCreatedAt = projecticonDescCreatedAt.Default.(func() time.Time)
	// projecticonDescUpdatedAt is the schema descriptor for updated_at field.
	projecticonDescUpdatedAt := projecticonMixinFields2[1].Descriptor()
	// projecticon.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projecticon.DefaultUpdatedAt = projecticonDescUpdatedAt.Default.(func() time.Time)
	// projecticonDescID is the schema descriptor for id field.
	projecticonDescID := projecticonMixinFields0[0].Descriptor()
	// projecticon.DefaultID holds the default value on creation for the id field.
	projecticon.DefaultID = projecticonDescID.Default.(func() ulid.ID)
	projectlightcolorMixin := schema.ProjectLightColor{}.Mixin()
	projectlightcolorMixinFields0 := projectlightcolorMixin[0].Fields()
	_ = projectlightcolorMixinFields0
	projectlightcolorMixinFields2 := projectlightcolorMixin[2].Fields()
	_ = projectlightcolorMixinFields2
	projectlightcolorFields := schema.ProjectLightColor{}.Fields()
	_ = projectlightcolorFields
	// projectlightcolorDescCreatedAt is the schema descriptor for created_at field.
	projectlightcolorDescCreatedAt := projectlightcolorMixinFields2[0].Descriptor()
	// projectlightcolor.DefaultCreatedAt holds the default value on creation for the created_at field.
	projectlightcolor.DefaultCreatedAt = projectlightcolorDescCreatedAt.Default.(func() time.Time)
	// projectlightcolorDescUpdatedAt is the schema descriptor for updated_at field.
	projectlightcolorDescUpdatedAt := projectlightcolorMixinFields2[1].Descriptor()
	// projectlightcolor.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projectlightcolor.DefaultUpdatedAt = projectlightcolorDescUpdatedAt.Default.(func() time.Time)
	// projectlightcolorDescID is the schema descriptor for id field.
	projectlightcolorDescID := projectlightcolorMixinFields0[0].Descriptor()
	// projectlightcolor.DefaultID holds the default value on creation for the id field.
	projectlightcolor.DefaultID = projectlightcolorDescID.Default.(func() ulid.ID)
	projecttaskcolumnMixin := schema.ProjectTaskColumn{}.Mixin()
	projecttaskcolumnMixinFields0 := projecttaskcolumnMixin[0].Fields()
	_ = projecttaskcolumnMixinFields0
	projecttaskcolumnMixinFields1 := projecttaskcolumnMixin[1].Fields()
	_ = projecttaskcolumnMixinFields1
	projecttaskcolumnMixinFields2 := projecttaskcolumnMixin[2].Fields()
	_ = projecttaskcolumnMixinFields2
	projecttaskcolumnFields := schema.ProjectTaskColumn{}.Fields()
	_ = projecttaskcolumnFields
	// projecttaskcolumnDescWidth is the schema descriptor for width field.
	projecttaskcolumnDescWidth := projecttaskcolumnMixinFields1[2].Descriptor()
	// projecttaskcolumn.WidthValidator is a validator for the "width" field. It is called by the builders before save.
	projecttaskcolumn.WidthValidator = func() func(string) error {
		validators := projecttaskcolumnDescWidth.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(width string) error {
			for _, fn := range fns {
				if err := fn(width); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// projecttaskcolumnDescCreatedAt is the schema descriptor for created_at field.
	projecttaskcolumnDescCreatedAt := projecttaskcolumnMixinFields2[0].Descriptor()
	// projecttaskcolumn.DefaultCreatedAt holds the default value on creation for the created_at field.
	projecttaskcolumn.DefaultCreatedAt = projecttaskcolumnDescCreatedAt.Default.(func() time.Time)
	// projecttaskcolumnDescUpdatedAt is the schema descriptor for updated_at field.
	projecttaskcolumnDescUpdatedAt := projecttaskcolumnMixinFields2[1].Descriptor()
	// projecttaskcolumn.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projecttaskcolumn.DefaultUpdatedAt = projecttaskcolumnDescUpdatedAt.Default.(func() time.Time)
	// projecttaskcolumnDescID is the schema descriptor for id field.
	projecttaskcolumnDescID := projecttaskcolumnMixinFields0[0].Descriptor()
	// projecttaskcolumn.DefaultID holds the default value on creation for the id field.
	projecttaskcolumn.DefaultID = projecttaskcolumnDescID.Default.(func() ulid.ID)
	projecttaskliststatusMixin := schema.ProjectTaskListStatus{}.Mixin()
	projecttaskliststatusMixinFields0 := projecttaskliststatusMixin[0].Fields()
	_ = projecttaskliststatusMixinFields0
	projecttaskliststatusMixinFields2 := projecttaskliststatusMixin[2].Fields()
	_ = projecttaskliststatusMixinFields2
	projecttaskliststatusFields := schema.ProjectTaskListStatus{}.Fields()
	_ = projecttaskliststatusFields
	// projecttaskliststatusDescCreatedAt is the schema descriptor for created_at field.
	projecttaskliststatusDescCreatedAt := projecttaskliststatusMixinFields2[0].Descriptor()
	// projecttaskliststatus.DefaultCreatedAt holds the default value on creation for the created_at field.
	projecttaskliststatus.DefaultCreatedAt = projecttaskliststatusDescCreatedAt.Default.(func() time.Time)
	// projecttaskliststatusDescUpdatedAt is the schema descriptor for updated_at field.
	projecttaskliststatusDescUpdatedAt := projecttaskliststatusMixinFields2[1].Descriptor()
	// projecttaskliststatus.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projecttaskliststatus.DefaultUpdatedAt = projecttaskliststatusDescUpdatedAt.Default.(func() time.Time)
	// projecttaskliststatusDescID is the schema descriptor for id field.
	projecttaskliststatusDescID := projecttaskliststatusMixinFields0[0].Descriptor()
	// projecttaskliststatus.DefaultID holds the default value on creation for the id field.
	projecttaskliststatus.DefaultID = projecttaskliststatusDescID.Default.(func() ulid.ID)
	projecttasksectionMixin := schema.ProjectTaskSection{}.Mixin()
	projecttasksectionMixinFields0 := projecttasksectionMixin[0].Fields()
	_ = projecttasksectionMixinFields0
	projecttasksectionMixinFields1 := projecttasksectionMixin[1].Fields()
	_ = projecttasksectionMixinFields1
	projecttasksectionMixinFields2 := projecttasksectionMixin[2].Fields()
	_ = projecttasksectionMixinFields2
	projecttasksectionFields := schema.ProjectTaskSection{}.Fields()
	_ = projecttasksectionFields
	// projecttasksectionDescName is the schema descriptor for name field.
	projecttasksectionDescName := projecttasksectionMixinFields1[1].Descriptor()
	// projecttasksection.NameValidator is a validator for the "name" field. It is called by the builders before save.
	projecttasksection.NameValidator = func() func(string) error {
		validators := projecttasksectionDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// projecttasksectionDescCreatedAt is the schema descriptor for created_at field.
	projecttasksectionDescCreatedAt := projecttasksectionMixinFields2[0].Descriptor()
	// projecttasksection.DefaultCreatedAt holds the default value on creation for the created_at field.
	projecttasksection.DefaultCreatedAt = projecttasksectionDescCreatedAt.Default.(func() time.Time)
	// projecttasksectionDescUpdatedAt is the schema descriptor for updated_at field.
	projecttasksectionDescUpdatedAt := projecttasksectionMixinFields2[1].Descriptor()
	// projecttasksection.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projecttasksection.DefaultUpdatedAt = projecttasksectionDescUpdatedAt.Default.(func() time.Time)
	// projecttasksectionDescID is the schema descriptor for id field.
	projecttasksectionDescID := projecttasksectionMixinFields0[0].Descriptor()
	// projecttasksection.DefaultID holds the default value on creation for the id field.
	projecttasksection.DefaultID = projecttasksectionDescID.Default.(func() ulid.ID)
	projectteammateMixin := schema.ProjectTeammate{}.Mixin()
	projectteammateMixinFields0 := projectteammateMixin[0].Fields()
	_ = projectteammateMixinFields0
	projectteammateMixinFields1 := projectteammateMixin[1].Fields()
	_ = projectteammateMixinFields1
	projectteammateMixinFields2 := projectteammateMixin[2].Fields()
	_ = projectteammateMixinFields2
	projectteammateFields := schema.ProjectTeammate{}.Fields()
	_ = projectteammateFields
	// projectteammateDescRole is the schema descriptor for role field.
	projectteammateDescRole := projectteammateMixinFields1[2].Descriptor()
	// projectteammate.RoleValidator is a validator for the "role" field. It is called by the builders before save.
	projectteammate.RoleValidator = projectteammateDescRole.Validators[0].(func(string) error)
	// projectteammateDescCreatedAt is the schema descriptor for created_at field.
	projectteammateDescCreatedAt := projectteammateMixinFields2[0].Descriptor()
	// projectteammate.DefaultCreatedAt holds the default value on creation for the created_at field.
	projectteammate.DefaultCreatedAt = projectteammateDescCreatedAt.Default.(func() time.Time)
	// projectteammateDescUpdatedAt is the schema descriptor for updated_at field.
	projectteammateDescUpdatedAt := projectteammateMixinFields2[1].Descriptor()
	// projectteammate.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	projectteammate.DefaultUpdatedAt = projectteammateDescUpdatedAt.Default.(func() time.Time)
	// projectteammateDescID is the schema descriptor for id field.
	projectteammateDescID := projectteammateMixinFields0[0].Descriptor()
	// projectteammate.DefaultID holds the default value on creation for the id field.
	projectteammate.DefaultID = projectteammateDescID.Default.(func() ulid.ID)
	taskcolumnMixin := schema.TaskColumn{}.Mixin()
	taskcolumnMixinFields0 := taskcolumnMixin[0].Fields()
	_ = taskcolumnMixinFields0
	taskcolumnMixinFields1 := taskcolumnMixin[1].Fields()
	_ = taskcolumnMixinFields1
	taskcolumnMixinFields2 := taskcolumnMixin[2].Fields()
	_ = taskcolumnMixinFields2
	taskcolumnFields := schema.TaskColumn{}.Fields()
	_ = taskcolumnFields
	// taskcolumnDescName is the schema descriptor for name field.
	taskcolumnDescName := taskcolumnMixinFields1[0].Descriptor()
	// taskcolumn.NameValidator is a validator for the "name" field. It is called by the builders before save.
	taskcolumn.NameValidator = func() func(string) error {
		validators := taskcolumnDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// taskcolumnDescCreatedAt is the schema descriptor for created_at field.
	taskcolumnDescCreatedAt := taskcolumnMixinFields2[0].Descriptor()
	// taskcolumn.DefaultCreatedAt holds the default value on creation for the created_at field.
	taskcolumn.DefaultCreatedAt = taskcolumnDescCreatedAt.Default.(func() time.Time)
	// taskcolumnDescUpdatedAt is the schema descriptor for updated_at field.
	taskcolumnDescUpdatedAt := taskcolumnMixinFields2[1].Descriptor()
	// taskcolumn.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	taskcolumn.DefaultUpdatedAt = taskcolumnDescUpdatedAt.Default.(func() time.Time)
	// taskcolumnDescID is the schema descriptor for id field.
	taskcolumnDescID := taskcolumnMixinFields0[0].Descriptor()
	// taskcolumn.DefaultID holds the default value on creation for the id field.
	taskcolumn.DefaultID = taskcolumnDescID.Default.(func() ulid.ID)
	tasklistcompletedstatusMixin := schema.TaskListCompletedStatus{}.Mixin()
	tasklistcompletedstatusMixinFields0 := tasklistcompletedstatusMixin[0].Fields()
	_ = tasklistcompletedstatusMixinFields0
	tasklistcompletedstatusMixinFields1 := tasklistcompletedstatusMixin[1].Fields()
	_ = tasklistcompletedstatusMixinFields1
	tasklistcompletedstatusMixinFields2 := tasklistcompletedstatusMixin[2].Fields()
	_ = tasklistcompletedstatusMixinFields2
	tasklistcompletedstatusFields := schema.TaskListCompletedStatus{}.Fields()
	_ = tasklistcompletedstatusFields
	// tasklistcompletedstatusDescName is the schema descriptor for name field.
	tasklistcompletedstatusDescName := tasklistcompletedstatusMixinFields1[0].Descriptor()
	// tasklistcompletedstatus.NameValidator is a validator for the "name" field. It is called by the builders before save.
	tasklistcompletedstatus.NameValidator = func() func(string) error {
		validators := tasklistcompletedstatusDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// tasklistcompletedstatusDescCreatedAt is the schema descriptor for created_at field.
	tasklistcompletedstatusDescCreatedAt := tasklistcompletedstatusMixinFields2[0].Descriptor()
	// tasklistcompletedstatus.DefaultCreatedAt holds the default value on creation for the created_at field.
	tasklistcompletedstatus.DefaultCreatedAt = tasklistcompletedstatusDescCreatedAt.Default.(func() time.Time)
	// tasklistcompletedstatusDescUpdatedAt is the schema descriptor for updated_at field.
	tasklistcompletedstatusDescUpdatedAt := tasklistcompletedstatusMixinFields2[1].Descriptor()
	// tasklistcompletedstatus.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tasklistcompletedstatus.DefaultUpdatedAt = tasklistcompletedstatusDescUpdatedAt.Default.(func() time.Time)
	// tasklistcompletedstatusDescID is the schema descriptor for id field.
	tasklistcompletedstatusDescID := tasklistcompletedstatusMixinFields0[0].Descriptor()
	// tasklistcompletedstatus.DefaultID holds the default value on creation for the id field.
	tasklistcompletedstatus.DefaultID = tasklistcompletedstatusDescID.Default.(func() ulid.ID)
	tasklistsortstatusMixin := schema.TaskListSortStatus{}.Mixin()
	tasklistsortstatusMixinFields0 := tasklistsortstatusMixin[0].Fields()
	_ = tasklistsortstatusMixinFields0
	tasklistsortstatusMixinFields1 := tasklistsortstatusMixin[1].Fields()
	_ = tasklistsortstatusMixinFields1
	tasklistsortstatusMixinFields2 := tasklistsortstatusMixin[2].Fields()
	_ = tasklistsortstatusMixinFields2
	tasklistsortstatusFields := schema.TaskListSortStatus{}.Fields()
	_ = tasklistsortstatusFields
	// tasklistsortstatusDescName is the schema descriptor for name field.
	tasklistsortstatusDescName := tasklistsortstatusMixinFields1[0].Descriptor()
	// tasklistsortstatus.NameValidator is a validator for the "name" field. It is called by the builders before save.
	tasklistsortstatus.NameValidator = func() func(string) error {
		validators := tasklistsortstatusDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// tasklistsortstatusDescCreatedAt is the schema descriptor for created_at field.
	tasklistsortstatusDescCreatedAt := tasklistsortstatusMixinFields2[0].Descriptor()
	// tasklistsortstatus.DefaultCreatedAt holds the default value on creation for the created_at field.
	tasklistsortstatus.DefaultCreatedAt = tasklistsortstatusDescCreatedAt.Default.(func() time.Time)
	// tasklistsortstatusDescUpdatedAt is the schema descriptor for updated_at field.
	tasklistsortstatusDescUpdatedAt := tasklistsortstatusMixinFields2[1].Descriptor()
	// tasklistsortstatus.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tasklistsortstatus.DefaultUpdatedAt = tasklistsortstatusDescUpdatedAt.Default.(func() time.Time)
	// tasklistsortstatusDescID is the schema descriptor for id field.
	tasklistsortstatusDescID := tasklistsortstatusMixinFields0[0].Descriptor()
	// tasklistsortstatus.DefaultID holds the default value on creation for the id field.
	tasklistsortstatus.DefaultID = tasklistsortstatusDescID.Default.(func() ulid.ID)
	taskpriorityMixin := schema.TaskPriority{}.Mixin()
	taskpriorityMixinFields0 := taskpriorityMixin[0].Fields()
	_ = taskpriorityMixinFields0
	taskpriorityMixinFields1 := taskpriorityMixin[1].Fields()
	_ = taskpriorityMixinFields1
	taskpriorityMixinFields2 := taskpriorityMixin[2].Fields()
	_ = taskpriorityMixinFields2
	taskpriorityFields := schema.TaskPriority{}.Fields()
	_ = taskpriorityFields
	// taskpriorityDescName is the schema descriptor for name field.
	taskpriorityDescName := taskpriorityMixinFields1[1].Descriptor()
	// taskpriority.NameValidator is a validator for the "name" field. It is called by the builders before save.
	taskpriority.NameValidator = func() func(string) error {
		validators := taskpriorityDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// taskpriorityDescCreatedAt is the schema descriptor for created_at field.
	taskpriorityDescCreatedAt := taskpriorityMixinFields2[0].Descriptor()
	// taskpriority.DefaultCreatedAt holds the default value on creation for the created_at field.
	taskpriority.DefaultCreatedAt = taskpriorityDescCreatedAt.Default.(func() time.Time)
	// taskpriorityDescUpdatedAt is the schema descriptor for updated_at field.
	taskpriorityDescUpdatedAt := taskpriorityMixinFields2[1].Descriptor()
	// taskpriority.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	taskpriority.DefaultUpdatedAt = taskpriorityDescUpdatedAt.Default.(func() time.Time)
	// taskpriorityDescID is the schema descriptor for id field.
	taskpriorityDescID := taskpriorityMixinFields0[0].Descriptor()
	// taskpriority.DefaultID holds the default value on creation for the id field.
	taskpriority.DefaultID = taskpriorityDescID.Default.(func() ulid.ID)
	tasksectionMixin := schema.TaskSection{}.Mixin()
	tasksectionMixinFields0 := tasksectionMixin[0].Fields()
	_ = tasksectionMixinFields0
	tasksectionMixinFields1 := tasksectionMixin[1].Fields()
	_ = tasksectionMixinFields1
	tasksectionMixinFields2 := tasksectionMixin[2].Fields()
	_ = tasksectionMixinFields2
	tasksectionFields := schema.TaskSection{}.Fields()
	_ = tasksectionFields
	// tasksectionDescName is the schema descriptor for name field.
	tasksectionDescName := tasksectionMixinFields1[0].Descriptor()
	// tasksection.NameValidator is a validator for the "name" field. It is called by the builders before save.
	tasksection.NameValidator = func() func(string) error {
		validators := tasksectionDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// tasksectionDescCreatedAt is the schema descriptor for created_at field.
	tasksectionDescCreatedAt := tasksectionMixinFields2[0].Descriptor()
	// tasksection.DefaultCreatedAt holds the default value on creation for the created_at field.
	tasksection.DefaultCreatedAt = tasksectionDescCreatedAt.Default.(func() time.Time)
	// tasksectionDescUpdatedAt is the schema descriptor for updated_at field.
	tasksectionDescUpdatedAt := tasksectionMixinFields2[1].Descriptor()
	// tasksection.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tasksection.DefaultUpdatedAt = tasksectionDescUpdatedAt.Default.(func() time.Time)
	// tasksectionDescID is the schema descriptor for id field.
	tasksectionDescID := tasksectionMixinFields0[0].Descriptor()
	// tasksection.DefaultID holds the default value on creation for the id field.
	tasksection.DefaultID = tasksectionDescID.Default.(func() ulid.ID)
	teammateMixin := schema.Teammate{}.Mixin()
	teammateMixinFields0 := teammateMixin[0].Fields()
	_ = teammateMixinFields0
	teammateMixinFields1 := teammateMixin[1].Fields()
	_ = teammateMixinFields1
	teammateMixinFields2 := teammateMixin[2].Fields()
	_ = teammateMixinFields2
	teammateFields := schema.Teammate{}.Fields()
	_ = teammateFields
	// teammateDescName is the schema descriptor for name field.
	teammateDescName := teammateMixinFields1[0].Descriptor()
	// teammate.NameValidator is a validator for the "name" field. It is called by the builders before save.
	teammate.NameValidator = func() func(string) error {
		validators := teammateDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// teammateDescImage is the schema descriptor for image field.
	teammateDescImage := teammateMixinFields1[1].Descriptor()
	// teammate.ImageValidator is a validator for the "image" field. It is called by the builders before save.
	teammate.ImageValidator = teammateDescImage.Validators[0].(func(string) error)
	// teammateDescEmail is the schema descriptor for email field.
	teammateDescEmail := teammateMixinFields1[2].Descriptor()
	// teammate.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	teammate.EmailValidator = teammateDescEmail.Validators[0].(func(string) error)
	// teammateDescCreatedAt is the schema descriptor for created_at field.
	teammateDescCreatedAt := teammateMixinFields2[0].Descriptor()
	// teammate.DefaultCreatedAt holds the default value on creation for the created_at field.
	teammate.DefaultCreatedAt = teammateDescCreatedAt.Default.(func() time.Time)
	// teammateDescUpdatedAt is the schema descriptor for updated_at field.
	teammateDescUpdatedAt := teammateMixinFields2[1].Descriptor()
	// teammate.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	teammate.DefaultUpdatedAt = teammateDescUpdatedAt.Default.(func() time.Time)
	// teammateDescID is the schema descriptor for id field.
	teammateDescID := teammateMixinFields0[0].Descriptor()
	// teammate.DefaultID holds the default value on creation for the id field.
	teammate.DefaultID = teammateDescID.Default.(func() ulid.ID)
	teammatetaskcolumnMixin := schema.TeammateTaskColumn{}.Mixin()
	teammatetaskcolumnMixinFields0 := teammatetaskcolumnMixin[0].Fields()
	_ = teammatetaskcolumnMixinFields0
	teammatetaskcolumnMixinFields1 := teammatetaskcolumnMixin[1].Fields()
	_ = teammatetaskcolumnMixinFields1
	teammatetaskcolumnMixinFields2 := teammatetaskcolumnMixin[2].Fields()
	_ = teammatetaskcolumnMixinFields2
	teammatetaskcolumnFields := schema.TeammateTaskColumn{}.Fields()
	_ = teammatetaskcolumnFields
	// teammatetaskcolumnDescWidth is the schema descriptor for width field.
	teammatetaskcolumnDescWidth := teammatetaskcolumnMixinFields1[2].Descriptor()
	// teammatetaskcolumn.WidthValidator is a validator for the "width" field. It is called by the builders before save.
	teammatetaskcolumn.WidthValidator = func() func(string) error {
		validators := teammatetaskcolumnDescWidth.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(width string) error {
			for _, fn := range fns {
				if err := fn(width); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// teammatetaskcolumnDescCreatedAt is the schema descriptor for created_at field.
	teammatetaskcolumnDescCreatedAt := teammatetaskcolumnMixinFields2[0].Descriptor()
	// teammatetaskcolumn.DefaultCreatedAt holds the default value on creation for the created_at field.
	teammatetaskcolumn.DefaultCreatedAt = teammatetaskcolumnDescCreatedAt.Default.(func() time.Time)
	// teammatetaskcolumnDescUpdatedAt is the schema descriptor for updated_at field.
	teammatetaskcolumnDescUpdatedAt := teammatetaskcolumnMixinFields2[1].Descriptor()
	// teammatetaskcolumn.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	teammatetaskcolumn.DefaultUpdatedAt = teammatetaskcolumnDescUpdatedAt.Default.(func() time.Time)
	// teammatetaskcolumnDescID is the schema descriptor for id field.
	teammatetaskcolumnDescID := teammatetaskcolumnMixinFields0[0].Descriptor()
	// teammatetaskcolumn.DefaultID holds the default value on creation for the id field.
	teammatetaskcolumn.DefaultID = teammatetaskcolumnDescID.Default.(func() ulid.ID)
	teammatetaskliststatusMixin := schema.TeammateTaskListStatus{}.Mixin()
	teammatetaskliststatusMixinFields0 := teammatetaskliststatusMixin[0].Fields()
	_ = teammatetaskliststatusMixinFields0
	teammatetaskliststatusMixinFields2 := teammatetaskliststatusMixin[2].Fields()
	_ = teammatetaskliststatusMixinFields2
	teammatetaskliststatusFields := schema.TeammateTaskListStatus{}.Fields()
	_ = teammatetaskliststatusFields
	// teammatetaskliststatusDescCreatedAt is the schema descriptor for created_at field.
	teammatetaskliststatusDescCreatedAt := teammatetaskliststatusMixinFields2[0].Descriptor()
	// teammatetaskliststatus.DefaultCreatedAt holds the default value on creation for the created_at field.
	teammatetaskliststatus.DefaultCreatedAt = teammatetaskliststatusDescCreatedAt.Default.(func() time.Time)
	// teammatetaskliststatusDescUpdatedAt is the schema descriptor for updated_at field.
	teammatetaskliststatusDescUpdatedAt := teammatetaskliststatusMixinFields2[1].Descriptor()
	// teammatetaskliststatus.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	teammatetaskliststatus.DefaultUpdatedAt = teammatetaskliststatusDescUpdatedAt.Default.(func() time.Time)
	// teammatetaskliststatusDescID is the schema descriptor for id field.
	teammatetaskliststatusDescID := teammatetaskliststatusMixinFields0[0].Descriptor()
	// teammatetaskliststatus.DefaultID holds the default value on creation for the id field.
	teammatetaskliststatus.DefaultID = teammatetaskliststatusDescID.Default.(func() ulid.ID)
	teammatetasksectionMixin := schema.TeammateTaskSection{}.Mixin()
	teammatetasksectionMixinFields0 := teammatetasksectionMixin[0].Fields()
	_ = teammatetasksectionMixinFields0
	teammatetasksectionMixinFields1 := teammatetasksectionMixin[1].Fields()
	_ = teammatetasksectionMixinFields1
	teammatetasksectionMixinFields2 := teammatetasksectionMixin[2].Fields()
	_ = teammatetasksectionMixinFields2
	teammatetasksectionFields := schema.TeammateTaskSection{}.Fields()
	_ = teammatetasksectionFields
	// teammatetasksectionDescName is the schema descriptor for name field.
	teammatetasksectionDescName := teammatetasksectionMixinFields1[2].Descriptor()
	// teammatetasksection.NameValidator is a validator for the "name" field. It is called by the builders before save.
	teammatetasksection.NameValidator = func() func(string) error {
		validators := teammatetasksectionDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// teammatetasksectionDescCreatedAt is the schema descriptor for created_at field.
	teammatetasksectionDescCreatedAt := teammatetasksectionMixinFields2[0].Descriptor()
	// teammatetasksection.DefaultCreatedAt holds the default value on creation for the created_at field.
	teammatetasksection.DefaultCreatedAt = teammatetasksectionDescCreatedAt.Default.(func() time.Time)
	// teammatetasksectionDescUpdatedAt is the schema descriptor for updated_at field.
	teammatetasksectionDescUpdatedAt := teammatetasksectionMixinFields2[1].Descriptor()
	// teammatetasksection.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	teammatetasksection.DefaultUpdatedAt = teammatetasksectionDescUpdatedAt.Default.(func() time.Time)
	// teammatetasksectionDescID is the schema descriptor for id field.
	teammatetasksectionDescID := teammatetasksectionMixinFields0[0].Descriptor()
	// teammatetasksection.DefaultID holds the default value on creation for the id field.
	teammatetasksection.DefaultID = teammatetasksectionDescID.Default.(func() ulid.ID)
	teammatetasktabstatusMixin := schema.TeammateTaskTabStatus{}.Mixin()
	teammatetasktabstatusMixinFields0 := teammatetasktabstatusMixin[0].Fields()
	_ = teammatetasktabstatusMixinFields0
	teammatetasktabstatusMixinFields1 := teammatetasktabstatusMixin[1].Fields()
	_ = teammatetasktabstatusMixinFields1
	teammatetasktabstatusMixinFields2 := teammatetasktabstatusMixin[2].Fields()
	_ = teammatetasktabstatusMixinFields2
	teammatetasktabstatusFields := schema.TeammateTaskTabStatus{}.Fields()
	_ = teammatetasktabstatusFields
	// teammatetasktabstatusDescCreatedAt is the schema descriptor for created_at field.
	teammatetasktabstatusDescCreatedAt := teammatetasktabstatusMixinFields2[0].Descriptor()
	// teammatetasktabstatus.DefaultCreatedAt holds the default value on creation for the created_at field.
	teammatetasktabstatus.DefaultCreatedAt = teammatetasktabstatusDescCreatedAt.Default.(func() time.Time)
	// teammatetasktabstatusDescUpdatedAt is the schema descriptor for updated_at field.
	teammatetasktabstatusDescUpdatedAt := teammatetasktabstatusMixinFields2[1].Descriptor()
	// teammatetasktabstatus.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	teammatetasktabstatus.DefaultUpdatedAt = teammatetasktabstatusDescUpdatedAt.Default.(func() time.Time)
	// teammatetasktabstatusDescID is the schema descriptor for id field.
	teammatetasktabstatusDescID := teammatetasktabstatusMixinFields0[0].Descriptor()
	// teammatetasktabstatus.DefaultID holds the default value on creation for the id field.
	teammatetasktabstatus.DefaultID = teammatetasktabstatusDescID.Default.(func() ulid.ID)
	testtodoMixin := schema.TestTodo{}.Mixin()
	testtodoMixinFields0 := testtodoMixin[0].Fields()
	_ = testtodoMixinFields0
	testtodoMixinFields1 := testtodoMixin[1].Fields()
	_ = testtodoMixinFields1
	testtodoMixinFields2 := testtodoMixin[2].Fields()
	_ = testtodoMixinFields2
	testtodoFields := schema.TestTodo{}.Fields()
	_ = testtodoFields
	// testtodoDescName is the schema descriptor for name field.
	testtodoDescName := testtodoMixinFields1[3].Descriptor()
	// testtodo.DefaultName holds the default value on creation for the name field.
	testtodo.DefaultName = testtodoDescName.Default.(string)
	// testtodoDescPriority is the schema descriptor for priority field.
	testtodoDescPriority := testtodoMixinFields1[5].Descriptor()
	// testtodo.DefaultPriority holds the default value on creation for the priority field.
	testtodo.DefaultPriority = testtodoDescPriority.Default.(int)
	// testtodoDescCreatedAt is the schema descriptor for created_at field.
	testtodoDescCreatedAt := testtodoMixinFields2[0].Descriptor()
	// testtodo.DefaultCreatedAt holds the default value on creation for the created_at field.
	testtodo.DefaultCreatedAt = testtodoDescCreatedAt.Default.(func() time.Time)
	// testtodoDescUpdatedAt is the schema descriptor for updated_at field.
	testtodoDescUpdatedAt := testtodoMixinFields2[1].Descriptor()
	// testtodo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	testtodo.DefaultUpdatedAt = testtodoDescUpdatedAt.Default.(func() time.Time)
	// testtodoDescID is the schema descriptor for id field.
	testtodoDescID := testtodoMixinFields0[0].Descriptor()
	// testtodo.DefaultID holds the default value on creation for the id field.
	testtodo.DefaultID = testtodoDescID.Default.(func() ulid.ID)
	testuserMixin := schema.TestUser{}.Mixin()
	testuserMixinFields0 := testuserMixin[0].Fields()
	_ = testuserMixinFields0
	testuserMixinFields1 := testuserMixin[1].Fields()
	_ = testuserMixinFields1
	testuserMixinFields2 := testuserMixin[2].Fields()
	_ = testuserMixinFields2
	testuserFields := schema.TestUser{}.Fields()
	_ = testuserFields
	// testuserDescName is the schema descriptor for name field.
	testuserDescName := testuserMixinFields1[0].Descriptor()
	// testuser.NameValidator is a validator for the "name" field. It is called by the builders before save.
	testuser.NameValidator = func() func(string) error {
		validators := testuserDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// testuserDescCreatedAt is the schema descriptor for created_at field.
	testuserDescCreatedAt := testuserMixinFields2[0].Descriptor()
	// testuser.DefaultCreatedAt holds the default value on creation for the created_at field.
	testuser.DefaultCreatedAt = testuserDescCreatedAt.Default.(func() time.Time)
	// testuserDescUpdatedAt is the schema descriptor for updated_at field.
	testuserDescUpdatedAt := testuserMixinFields2[1].Descriptor()
	// testuser.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	testuser.DefaultUpdatedAt = testuserDescUpdatedAt.Default.(func() time.Time)
	// testuserDescID is the schema descriptor for id field.
	testuserDescID := testuserMixinFields0[0].Descriptor()
	// testuser.DefaultID holds the default value on creation for the id field.
	testuser.DefaultID = testuserDescID.Default.(func() ulid.ID)
	workspaceMixin := schema.Workspace{}.Mixin()
	workspaceMixinFields0 := workspaceMixin[0].Fields()
	_ = workspaceMixinFields0
	workspaceMixinFields1 := workspaceMixin[1].Fields()
	_ = workspaceMixinFields1
	workspaceMixinFields2 := workspaceMixin[2].Fields()
	_ = workspaceMixinFields2
	workspaceFields := schema.Workspace{}.Fields()
	_ = workspaceFields
	// workspaceDescName is the schema descriptor for name field.
	workspaceDescName := workspaceMixinFields1[1].Descriptor()
	// workspace.NameValidator is a validator for the "name" field. It is called by the builders before save.
	workspace.NameValidator = func() func(string) error {
		validators := workspaceDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// workspaceDescCreatedAt is the schema descriptor for created_at field.
	workspaceDescCreatedAt := workspaceMixinFields2[0].Descriptor()
	// workspace.DefaultCreatedAt holds the default value on creation for the created_at field.
	workspace.DefaultCreatedAt = workspaceDescCreatedAt.Default.(func() time.Time)
	// workspaceDescUpdatedAt is the schema descriptor for updated_at field.
	workspaceDescUpdatedAt := workspaceMixinFields2[1].Descriptor()
	// workspace.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	workspace.DefaultUpdatedAt = workspaceDescUpdatedAt.Default.(func() time.Time)
	// workspaceDescID is the schema descriptor for id field.
	workspaceDescID := workspaceMixinFields0[0].Descriptor()
	// workspace.DefaultID holds the default value on creation for the id field.
	workspace.DefaultID = workspaceDescID.Default.(func() ulid.ID)
	workspaceteammateMixin := schema.WorkspaceTeammate{}.Mixin()
	workspaceteammateMixinFields0 := workspaceteammateMixin[0].Fields()
	_ = workspaceteammateMixinFields0
	workspaceteammateMixinFields1 := workspaceteammateMixin[1].Fields()
	_ = workspaceteammateMixinFields1
	workspaceteammateMixinFields2 := workspaceteammateMixin[2].Fields()
	_ = workspaceteammateMixinFields2
	workspaceteammateFields := schema.WorkspaceTeammate{}.Fields()
	_ = workspaceteammateFields
	// workspaceteammateDescRole is the schema descriptor for role field.
	workspaceteammateDescRole := workspaceteammateMixinFields1[2].Descriptor()
	// workspaceteammate.RoleValidator is a validator for the "role" field. It is called by the builders before save.
	workspaceteammate.RoleValidator = workspaceteammateDescRole.Validators[0].(func(string) error)
	// workspaceteammateDescCreatedAt is the schema descriptor for created_at field.
	workspaceteammateDescCreatedAt := workspaceteammateMixinFields2[0].Descriptor()
	// workspaceteammate.DefaultCreatedAt holds the default value on creation for the created_at field.
	workspaceteammate.DefaultCreatedAt = workspaceteammateDescCreatedAt.Default.(func() time.Time)
	// workspaceteammateDescUpdatedAt is the schema descriptor for updated_at field.
	workspaceteammateDescUpdatedAt := workspaceteammateMixinFields2[1].Descriptor()
	// workspaceteammate.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	workspaceteammate.DefaultUpdatedAt = workspaceteammateDescUpdatedAt.Default.(func() time.Time)
	// workspaceteammateDescID is the schema descriptor for id field.
	workspaceteammateDescID := workspaceteammateMixinFields0[0].Descriptor()
	// workspaceteammate.DefaultID holds the default value on creation for the id field.
	workspaceteammate.DefaultID = workspaceteammateDescID.Default.(func() ulid.ID)
}
