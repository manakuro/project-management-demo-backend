// Code generated by entc, DO NOT EDIT.

package ent

import (
	"entgo.io/ent"
	"entgo.io/ent/dialect"
)

// Option function to configure the client.
type Option func(*config)

// Config is the configuration for the client and its builder.
type config struct {
	// driver used for executing database requests.
	driver dialect.Driver
	// debug enable a debug logging.
	debug bool
	// log used for logging on debug mode.
	log func(...interface{})
	// hooks to execute on mutations.
	hooks *hooks
}

// hooks per client, for fast access.
type hooks struct {
	ActivityType                  []ent.Hook
	ArchivedTaskActivity          []ent.Hook
	ArchivedTaskActivityTask      []ent.Hook
	ArchivedWorkspaceActivity     []ent.Hook
	ArchivedWorkspaceActivityTask []ent.Hook
	Color                         []ent.Hook
	DeletedProjectTask            []ent.Hook
	DeletedTask                   []ent.Hook
	DeletedTaskActivityTask       []ent.Hook
	DeletedTeammateTask           []ent.Hook
	DeletedWorkspaceActivityTask  []ent.Hook
	FavoriteProject               []ent.Hook
	FavoriteWorkspace             []ent.Hook
	FileType                      []ent.Hook
	Icon                          []ent.Hook
	Project                       []ent.Hook
	ProjectBaseColor              []ent.Hook
	ProjectIcon                   []ent.Hook
	ProjectLightColor             []ent.Hook
	ProjectTask                   []ent.Hook
	ProjectTaskColumn             []ent.Hook
	ProjectTaskListStatus         []ent.Hook
	ProjectTaskSection            []ent.Hook
	ProjectTeammate               []ent.Hook
	Tag                           []ent.Hook
	Task                          []ent.Hook
	TaskActivity                  []ent.Hook
	TaskActivityTask              []ent.Hook
	TaskCollaborator              []ent.Hook
	TaskColumn                    []ent.Hook
	TaskFeed                      []ent.Hook
	TaskFeedLike                  []ent.Hook
	TaskFile                      []ent.Hook
	TaskLike                      []ent.Hook
	TaskListCompletedStatus       []ent.Hook
	TaskListSortStatus            []ent.Hook
	TaskPriority                  []ent.Hook
	TaskSection                   []ent.Hook
	TaskTag                       []ent.Hook
	Teammate                      []ent.Hook
	TeammateTask                  []ent.Hook
	TeammateTaskColumn            []ent.Hook
	TeammateTaskListStatus        []ent.Hook
	TeammateTaskSection           []ent.Hook
	TeammateTaskTabStatus         []ent.Hook
	TestTodo                      []ent.Hook
	TestUser                      []ent.Hook
	Workspace                     []ent.Hook
	WorkspaceActivity             []ent.Hook
	WorkspaceActivityTask         []ent.Hook
	WorkspaceTeammate             []ent.Hook
}

// Options applies the options on the config object.
func (c *config) options(opts ...Option) {
	for _, opt := range opts {
		opt(c)
	}
	if c.debug {
		c.driver = dialect.Debug(c.driver, c.log)
	}
}

// Debug enables debug logging on the ent.Driver.
func Debug() Option {
	return func(c *config) {
		c.debug = true
	}
}

// Log sets the logging function for debug mode.
func Log(fn func(...interface{})) Option {
	return func(c *config) {
		c.log = fn
	}
}

// Driver configures the client driver.
func Driver(driver dialect.Driver) Option {
	return func(c *config) {
		c.driver = driver
	}
}
