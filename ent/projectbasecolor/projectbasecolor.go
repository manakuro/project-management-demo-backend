// Code generated by entc, DO NOT EDIT.

package projectbasecolor

import (
	"project-management-demo-backend/ent/schema/ulid"
	"time"
)

const (
	// Label holds the string label denoting the projectbasecolor type in the database.
	Label = "project_base_color"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldColorID holds the string denoting the color_id field in the database.
	FieldColorID = "color_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeProjects holds the string denoting the projects edge name in mutations.
	EdgeProjects = "projects"
	// EdgeColor holds the string denoting the color edge name in mutations.
	EdgeColor = "color"
	// Table holds the table name of the projectbasecolor in the database.
	Table = "project_base_colors"
	// ProjectsTable is the table that holds the projects relation/edge.
	ProjectsTable = "projects"
	// ProjectsInverseTable is the table name for the Project entity.
	// It exists in this package in order to avoid circular dependency with the "project" package.
	ProjectsInverseTable = "projects"
	// ProjectsColumn is the table column denoting the projects relation/edge.
	ProjectsColumn = "project_base_color_id"
	// ColorTable is the table that holds the color relation/edge.
	ColorTable = "project_base_colors"
	// ColorInverseTable is the table name for the Color entity.
	// It exists in this package in order to avoid circular dependency with the "color" package.
	ColorInverseTable = "colors"
	// ColorColumn is the table column denoting the color relation/edge.
	ColorColumn = "color_id"
)

// Columns holds all SQL columns for projectbasecolor fields.
var Columns = []string{
	FieldID,
	FieldColorID,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() ulid.ID
)
